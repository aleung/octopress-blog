<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Good good study, day day up]]></title>
  <link href="http://aleung.github.io/blog/atom.xml" rel="self"/>
  <link href="http://aleung.github.io/blog/"/>
  <updated>2014-06-13T20:07:54+08:00</updated>
  <id>http://aleung.github.io/blog/</id>
  <author>
    <name><![CDATA[Leo Liang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[EJB 2 与 EJB 3 混用的问题]]></title>
    <link href="http://aleung.github.io/blog/2014/06/13/mix-use-of-ejb-2-and-ejb-3/"/>
    <updated>2014-06-13T19:54:33+08:00</updated>
    <id>http://aleung.github.io/blog/2014/06/13/mix-use-of-ejb-2-and-ejb-3</id>
    <content type="html"><![CDATA[<p>系统遗留代码里面大量使用了EJB 2.1 session bean，新增的代码采用EJB 3.0（该系统用的AS还不支持3.1），用annotation而没有写部署描述符ejb-jar.xml，新旧版本的EJB分别在不同module中，使用一直正常。</p>

<p>最近该系统又做了一些修改，增加新的EJB，但新增的bean死活找不到，似乎是根本没有部署起来。这次修改跟以前的区别是，新的EJB 3.0 bean直接放在原有EJB 2.1 bean的module里。后来发现将ejb部署描述文件ejb-jar.xml删除后，新的bean（通过annotation声明为EJB）就能正常加载。同事怀疑是不同版本的EJB不能共存在同一个module中。但我记得EJB新规范是兼容旧规范的，以前做原型的时候也试过能够混用，于是再检查一下，发现问题出自部署描述文件 ejb-jar.xml 中，该文件的version是2.1：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;ejb-jar</span> <span class="na">version=</span><span class="s">&quot;2.1&quot;</span> <span class="na">xmlns=</span><span class="s">&quot;http://java.sun.com/xml/ns/javaee&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>将version改成3.0之后，一切都正常了，描述文件中声明的EJB 2.1 bean和annotation声明的EJB 3.0 bean都能正常加载。估计原来的问题是因为EJB容器在部署ejb module时，先分析部署描述文件，发现部署描述文件指定了EJB 2.1规范，就不再按照EJB 3.0规范去扫描annotation了。</p>
]]></content>
  </entry>
  
</feed>
