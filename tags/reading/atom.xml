<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Reading | Good good study, day day up]]></title>
  <link href="http://aleung.github.io/blog/tags/reading/atom.xml" rel="self"/>
  <link href="http://aleung.github.io/blog/"/>
  <updated>2015-09-20T12:42:21+08:00</updated>
  <id>http://aleung.github.io/blog/</id>
  <author>
    <name><![CDATA[Leo Liang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[永恒的终结]]></title>
    <link href="http://aleung.github.io/blog/2015/06/09/the-end-of-eternity/"/>
    <updated>2015-06-09T23:50:40+08:00</updated>
    <id>http://aleung.github.io/blog/2015/06/09/the-end-of-eternity</id>
    <content type="html"><![CDATA[<p><img class="right" src="/attachments/2015/6/TheEndOfEternity.jpg"></p>

<p>花了几天空余时间，看完了阿西莫夫的科幻小说<a href="http://book.douban.com/subject/25829693/">《永恒的终结》</a>。</p>

<p>在我的印象中，阿西莫夫的科幻小说是以逻辑严谨为特征的。他的好多作品都是设定在未来背景的侦探推理小说。小学时代读他的“机器人系列”，还以为机器人三大定律真的是生产机器人都需要固化的逻辑。总之，感觉他的书基本上都是烧脑之作，读起来要细细思考琢磨的。</p>

<p><em>（提示: 有关键情节透露）</em></p>

<p>在《永恒的终结》的设定中，时间的流逝是绝对的、单向的。即使在永恒时空，依然存在着时间的流逝（所谓的物理时间）。时间作用在永恒之人身上，他们依然会变老。严格的说，在整部小说的设定中，只存在一个时空，也就是一般时空。并不存在着一个独立的永恒时空，永恒时空其实是锚定在一般时空之上的一个个节点（在某些世纪上存在一个分区），永恒时空的时间跟一般时空的时间是同步的流逝的。</p>

<p>《永恒的终结》并没有引入其他科幻小说常用的平行时空的概念，或者说即使有平行时空，他们（永恒之人）也只能在其中一个时空上活动。永恒之人的特别之处在于他们拥有着在时间轴上穿行的能力，他们能够到达时空上的任何一个时刻（也包括空间位置，但这在故事中不是重点）。将时空中的活动想象为一盘按正常速度播放录像带，永恒之人就是能够倒退或者快进到录像带的某个时刻进行播放。无论如何，在这（唯一的）时空之中，因果率是起作用的，也就是说，这盘录像带的剧情是合乎因果情理来发展的，前一时刻的事件产生的后果会反映到后面的时刻中。永恒之人在时空之中穿梭观察，以一个旁观者的身份，他可以看到一件事情发生的前因后果。</p>

<p>但是，永恒之人要亲临一般时空的某个时刻进行观察，免不了会对该时刻发生的事件带来影响，因为这不像我们看录像带，超脱于录像的时空之外，前面说了时空其实始终只有一个，永恒之人进入某个时刻，也就是成为录像带场景中的一部分了。他在这个时刻的任何行动，都会在后续的时刻带来后果，也就是干扰了现实，带来了现实的变革。变革有多大，视乎影响的大小，如果恰好改变了因果链的一个关键节点，就会对后续的社会发展带来很大的影响，也就是永恒之人所做的现实变革。</p>

<p>虽然永恒之人可以随时进入某个时刻，做某些事情去改变现实，但他们并不能预先观察到引发的后果。因为这个一般时空是严格遵从因果律的，时空技师可以先去2481世纪看看是什么样子的，然后去2456世纪去实施现实变革计划，但是他看到的2481世纪只会是没有变革的，他没办法预先看到变革后的2481世纪，因为他还没有改变2456世纪发生的事件，无因就无果。当时空技师在2456世纪干预了某些事件，带来了连锁反应的后果，再去看2481世纪，这时他看到的就跟之前看到的2481世纪不一样了，之前的2481世纪已经不存在——只存在在他的记忆里——现实已经被改写。这就是为什么技师爱上了482世纪的一个女人，但当现实变革后，他即使再回到482世纪也无法找回他的爱人——也许她不存在了，也许在新的现实里她从来就没有爱过他。小说冲击了读者的一个观念：在具体的某一个时刻，发生过的事情永远不会改变。在这里，时间只是一个一维坐标系，事件并不是固化在上面的，就像可以将一件物品从空间一个位置上挪走，同样可以在时间上改变某个时刻发生的事件。</p>

<p>因为永恒之人并无法预先观测到现实变革的后果，他们只能依靠先进的计算机阵列和经验丰富的计算师去预测某个方案能够带来怎样的变化。不知道他们是怎样为世界的运转建模的，还有超凡的计算能力去预估一个扰动在逐渐发散的因果链上带来的后果。不过，跟蝴蝶效应之类的理论不同，在小说中设定为现实的演进是存在惯性的，一个扰动并不会带来无限发散的后续影响，而是经过一段时间后回归到跟没有扰动发生过一样的演进状态。所以，一个现实变革可能会影响几个世纪乃至上百个世纪的演进，但不会带来无穷的影响。</p>

<p>如果这种影响只是单向的：永恒之人可以进入某个时刻，给这个时间带来影响，那么一切还是很完美，因果链始终是开放无穷伸展的，不会成为闭环。但是小说其实还是要回到时空旅行的经典因果悖论：循环因果中去。</p>

<p>其实时间的因果悖论在永恒时空之中也存在：一个永恒之人是不是能够返回到前几天，去改变全时理事会的一次会议讨论？但小说将永恒时空设定为非连续的时空（至少一个世纪才有一个分区），绕开了这个问题，因为小说要指向一个更加大的悖论。</p>

<p><em>（注意：以下关键剧透）</em></p>

<p>小说将永恒时空的建立，或者说时空旅行的技术的产生，设定为是永恒之人将未来（27世纪）才发现的数学原理带回24世纪而创造的。这样，因果链条就形成了闭环了，前事之因带来后事之果，而后事却又是前事之因（这里的前、后指的是时间轴上的坐标）。那么，一旦“后事”没有发生，“前事”又何来呢？答案还是那个：现实将被抹去，一切都没有发生过。这与现实变革其实是一样的，永恒之人实施现实变革是对某个时刻实施干预，影响它的后果而将当前现实更替为另外一个现实；而永恒时空的建立本身就是一个来自未来的干预的结果，因此永恒之人需要去实施这个干预，以保证因果链的闭合，使得当前现实得以保存。一旦这个预期的干预没有发生，从那个时刻起的现实就毁灭了，变成一个新的现实——没有发生过来自未来的干预的现实。</p>

<p>但是我始终没有想明白的是，假若时间旅行是可行的，这种循环因果链在逻辑上可能存在吗？它是怎样形成的？可以不存在一个第一推动者？</p>

<p>小说最终的三个章节的转折还是让我意料不及，用的道理是很平白的：生于忧患，死于安乐，整个人类也是如此。拥有了时空穿行能力的人类会不断的通过现实变革，将人类的发展历史局限在一个安稳的状态。但是缺失了外太空探险精神的人类就在与外星文明的竞争中落败了。</p>

<p>在我的个人阅读体验里，读到最后几页感觉是前面做了如此华丽的铺垫，图穷匕见的却是一个建立银河帝国的俗套的梦想，颇有失望。</p>

<p>阿西莫夫将毁灭永恒时空的动机解释为男女之间的爱情，也许爱情是世界上最重要的东西，唯有它才能产生改变整个时空的动力。但阿西莫夫毕竟还是写逻辑推理更擅长，写起男女感情来完全读不出味道。</p>

<hr />

<p>豆瓣书评：http://book.douban.com/review/7495652/</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting the Hang of Web Typography]]></title>
    <link href="http://aleung.github.io/blog/2014/08/23/getting-the-hang-of-web-typography/"/>
    <updated>2014-08-23T10:34:11+08:00</updated>
    <id>http://aleung.github.io/blog/2014/08/23/getting-the-hang-of-web-typography</id>
    <content type="html"><![CDATA[<p>读书笔记摘抄：《<a href="http://book.douban.com/subject/25741532/">众妙之门——网页排版设计制胜秘诀</a>》</p>

<h1 id="section">版式设计</h1>

<p>正文字号常见为12~14px。</p>

<p>标题与正文字号（font-size）的比例，比较流行的平均值是1.96。也就是将正文文字字号乘以2，就得到标题文字的字号。字号从传统值（6,7,8,9,10,11,12,14,16,18,21,24,36,48,60,72）或者斐波那契数列（8,13,21,34,55）中选择，可以得到更自然的版式效果。</p>

<p>计算行宽的简单方法：行宽=字号*30。如果字号是10px，行宽就是300px，差不多等于一行65个字。</p>

<p>行高（line-height）受多种因素的影响：字体、字号、粗细、样式、行宽、字距等。行宽越宽，行高就需越大；字号越大，行高就需要越小。比较流行的行高与字号的比例是1.5。</p>

<p>段间距通常是行高的75%左右。</p>

<h1 id="section-1">字体分类</h1>

<p>网页设计中大多数字体可以分为五大类别：</p>

<h3 id="geometric-sans-">Geometric Sans 无衬线几何字体</h3>

<p><img src="/attachments/2014/8/geometric.jpg"></p>

<p>这个类别实际包括了几何风格（Geometric）、现实风格（Realist）和奇异风格（Grotesk）三类字体。它们基于精准几何形体，每个字母笔画的宽度都是一样的，这种设计生动体现了“少即是多”的极简派的设计思想。</p>

<ul>
  <li>运用得当：干净、感性、现代而通用；</li>
  <li>运用不当：冰冷、理性、枯燥。</li>
</ul>

<p><em>Examples of Geometric/Realist/Grotesk Sans:</em> Helvetica, Univers, Futura, Avant Garde, Akzidenz Grotesk, Franklin Gothic, Gotham.</p>

<h3 id="humanist-sans-">Humanist Sans 无衬线人文字体</h3>

<p><img src="/attachments/2014/8/humanist.jpg"></p>

<p>由手写体衍化而来，它们中的一些可能看上去干净而现代，但仍旧保留了一些手写体的特点。一般具有更多细节、更少的一致性，而且字体较窄笔画偏粗。</p>

<ul>
  <li>运用得当：既现代又人文；</li>
  <li>运用不当：缺乏力度，不够权威。</li>
</ul>

<p><em>Examples of Humanist Sans:</em> Gill Sans, Frutiger, Myriad, Optima, Verdana.</p>

<h3 id="old-style-">Old Style 古体字</h3>

<p><img src="/attachments/2014/8/old-style.jpg"></p>

<p>特点是粗细笔画间的对比微妙，还有字母的弧度朝左偏。</p>

<ul>
  <li>运用得当：古典，传统而易读；</li>
  <li>运用不当：依然是古典和传统（与其他不协调）。</li>
</ul>

<p><em>Examples of Old Style:</em> Jenson, Bembo, Palatino, Garamond(尤其显得传统)</p>

<h3 id="transitional-and-modern-">Transitional and Modern 过渡体和现代体</h3>

<p><img src="/attachments/2014/8/trans.jpg"><img src="/attachments/2014/8/modern.jpg"></p>

<p>这两类字体是启蒙思想的产物，字体设计师尝试改变平凡而低调的古体字的字形，使其变得更具几何特点、更锐利、更艺术。</p>

<ul>
  <li>运用得当：展现出力量感、时尚感和活力；</li>
  <li>运用不当：不伦不类——若说古典，又过于显眼和繁复；若说现代，又显得有点俗气。</li>
</ul>

<p><em>Examples of transitional typefaces:</em> Times New Roman, Baskerville.</p>

<p><em>Examples of Modern serifs:</em> Bodoni, Didot.</p>

<h3 id="slab-serifs-">Slab Serifs 带衬线的板式字体</h3>

<p><img src="/attachments/2014/8/slab.jpg"></p>

<p>笔画与其他衬线字体很像（形式简洁，笔画粗细对比相对微弱），但较为特别的是笔画末端有又方又硬的衬线。</p>

<p>这类字体可以传达出一种权威感，如Rockwell字体的粗体；也可以展现出友好的感觉，如Archer。独特的块状衬线能为版面带来特别的气息，不过一旦用错也尤为显眼。</p>

<p><em>Examples of Slab Serifs:</em> Clarendon, Rockwell, Courier, Lubalin Graph, Archer.</p>

<h3 id="reference">Reference:</h3>

<ul>
  <li><a href="what-font">What Font Should I Use?</a></li>
  <li>Making Sense of Type Classification (<a href="type-class-1">part 1</a>) (<a href="type-class-2">part 2</a>)</li>
</ul>

<h1 id="css-font-stack">CSS Font Stack</h1>

<p>创建字体栈的基本公式：最佳字体 + 次佳字体 + 常见的相似字体 + 相似的网页安全字体 + 通用字体。</p>

<p>在字体栈中要注意字体的字形比例。例如网页安全字体中，Verdana字形很宽，Arial/Helvetica相对较窄，它们不应该同时存在于版式中；Times和Georgia也是同理。</p>

<p>常见的字体栈参看 <a href="http://www.smashingmagazine.com/2009/09/22/complete-guide-to-css-font-stacks/">Guide to CSS Font Stacks</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《简约至上》读书笔记]]></title>
    <link href="http://aleung.github.io/blog/2012/07/14/simple-first/"/>
    <updated>2012-07-14T10:43:00+08:00</updated>
    <id>http://aleung.github.io/blog/2012/07/14/simple-first</id>
    <content type="html"><![CDATA[<p><a href="http://book.douban.com/subject/5394309/">简约至上</a>，原作名为 Simple and Usable Web,Mobile,and Interaction Design，不错的关于交互设计的书籍。</p>

<iframe id="xmindshare_embedviewer" src="http://www.xmind.net/share/_embed/aleung/simple-first/" width="900px" height="300px" frameborder="0" scrolling="no"></iframe>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一些读书记录]]></title>
    <link href="http://aleung.github.io/blog/2012/06/09/Some-reading-record/"/>
    <updated>2012-06-09T11:56:00+08:00</updated>
    <id>http://aleung.github.io/blog/2012/06/09/Some-reading-record</id>
    <content type="html"><![CDATA[<p>前几个月看了些软件开发相关的书，读的时候有时有感悟就发条tweet，在这里备份一下。  </p>

<h3 id="httpbookdoubancomsubject6526454"><a href="http://book.douban.com/subject/6526454/">梦断代码</a></h3>

<p>开始阅读《梦断代码》，一个历时多年的软件项目惨败的故事。其实类似的案例很多很多，不过大家都不愿意承认失败，或者将失败轻描淡写而已。</p>

<p>可复用软件之梦有一悖论：几乎总能找到一段满足大部分需要的代码，但这些拿来的代码所不能做到的部分，恰是本项目与众不同的创新之处。</p>

<p>软件开发的时间估算始终是恒久难题，敏捷方法能做到的只是对于短期估算有改善：通过任务切分和开发团队亲自估算让数值看起来可靠些，通过计算迭代速率等手段让估算值反映团队近期状态；但对于长期估算，答案依然是：你丫别问了，到时自然就知道。</p>

<p>《梦断代码》讲了一帮聪明人是怎么把事情搞砸的。因此我非常感兴趣Linux项目是怎么运作的，Linus怎么把这么多聪明人弄到一起合作，而且似乎成效相当不错。</p>

<p>在周五下班的地铁上看完了《梦断代码》，没有做计划也没有刻意定目标，但已经是在周五读完的第三本书，每周一本。就像连续三个叠代都准时交付。</p>

<h3 id="httpbookdoubancomsubject5406042"><a href="http://book.douban.com/subject/5406042/">设计原本</a></h3>

<p>一个设计，一个人能完成就不要让其他人参与，增加的人手会削弱设计的一致性，概念的完整性。一个职责，一个部门负责就好，多部门合作带来各自的利益考虑和冲突。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《程序员的思维修炼》读书笔记]]></title>
    <link href="http://aleung.github.io/blog/2012/06/05/The-programmer-thought-of-uniting-the-reading-notes/"/>
    <updated>2012-06-05T22:27:00+08:00</updated>
    <id>http://aleung.github.io/blog/2012/06/05/The-programmer-thought-of-uniting-the-reading-notes</id>
    <content type="html"><![CDATA[<p>《<a href="http://book.douban.com/subject/5372651/">程序员的思维修炼—-开发认知潜能的九堂课</a>》，国内书商起个怪名字，其实重点在副标题。 原书标题根本不是这样的。</p>

<h2 id="dreyfus">德雷福斯(Dreyfus)技能模型</h2>

<h3 id="novice">新手(Novice)</h3>

<p>新手缺乏经验，完成任务时需要操作指引。</p>

<p>即使某人在一个领域上工作了十年，对所有指引已经了然于心，但他只是不断重复执行指令，也依然是新手。</p>

<h3 id="advanced-beginner">高级新手(Advanced beginner)</h3>

<p>能执行要做的任务并根据需求学习新任务，但没对任务环境获得更广泛的概念上的理解，缺乏全局思维。</p>

<p>高级新手占了绝大部分比例，但他们常高估自己，因为不知道自己不知道什么。</p>

<h3 id="competent">胜任者(Competent)</h3>

<p>胜任者能够独立解决问题。</p>

<h3 id="proficient-practitioner">精通者(Proficient practitioner)</h3>

<p>精通者懂得反思，自我纠正，从自己和他人的经验中学习。</p>

<h3 id="expert">专家(Expert)</h3>

<p>专家凭直觉工作，基于他们在领域中的丰富经验，在恰当的情景中选取和应用这些经验。</p>

<p>专家对问题思考时将所有方面作为一个完整和独特的整体来考虑，而不仅是关注相关方面。</p>

<p>处理问题时，新手需要指引(instruction)，专家依靠直觉。不给新手指引，或者要求专家跟随指引，都会降低生产力。</p>

<p><em>按照前面说那个技能模型的定义，看看自己，在大部分领域都只是高级新手，少量能到胜任者，连精通都算不上。</em></p>

<h2 id="section">隐性思维</h2>

<p><em>原文中为R型思维，R指右脑，但作者认为左右脑区分并非真实情况，将L解释为线性(linear)模式R解释为富(rich)模式。我按照自己的理解将R型思维看成隐性思维。</em></p>

<p>发挥隐性思维，捕获闪现灵感，随时准备着记录下来。</p>

<p>隐性思维会被压抑，在一种思维不受控制的状态下，隐性思维才会发挥作用。</p>

<p>重视你的直觉，但要去验证它，而不是盲目在第一时间跟随直觉行动。</p>

<p>隐性思维是非线性的，它从你的记忆库中匹配关联，多学习接触不同类别的东西，为隐性思维累积素材。</p>
]]></content>
  </entry>
  
</feed>
